/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   mixins/missing-options-mixin.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {dedupingMixin} from '@polymer/polymer/lib/utils/mixin.js';

export {MissingOptions};


/**
 * Missing options helper
 */
declare function MissingOptions<T extends new (...args: any[]) => {}>(base: T): T & MissingOptionsConstructor;

interface MissingOptionsConstructor {
  new(...args: any[]): MissingOptions;
}

export {MissingOptionsConstructor};

interface MissingOptions {
  url: string|null|undefined;
  ajaxParams: object|null|undefined;

  /**
   * If there are no selected options that are not found in dropdown options then request them from server using
   * url and ajaxParams(values property will contain missing values)
   * ajaxParams = {
   *    values: 1 // single value
   * }
   *
   * ajaxParams = {
   *    values: 1,2,3,4 // multiple values
   * }
   */
  requestMissingOptions(notFoundValues: any[]|null): void;

  /**
   * Handle missing option request response
   */
  handleMissingOptionsReqResponse(response: any): void;

  /**
   * Handle missing options request error
   */
  handleMissingOptionsReqError(errorResponse: any): void;

  /**
   * Check if request missing option functionality can be used
   */
  shouldRequestMissingOption(url: any): boolean;

  /**
   * Check if option received from missing options request is valid
   */
  isValidOption(optionObj: any): boolean|any;

  /**
   * Prepare new received options to add them to the current options list
   */
  prepareReceivedOptions(receivedOptions: any): any;
}
